{"version":3,"file":"static/js/817.1460ad0c.chunk.js","mappings":"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","sources":["components/admin/MostrarUsuarios.tsx","utils/auth.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport '../../assets/css/usuarios.css';\r\nimport { getUsersFromLocalStorage, deleteUserFromLocalStorage } from '../../utils/auth';\r\nimport { User } from '../../utils/users';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst MostrarUsuarios: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Load users from localStorage when the component mounts\r\n    const storedUsers = getUsersFromLocalStorage();\r\n    if (storedUsers) {\r\n      setUsers(storedUsers);\r\n    }\r\n  }, []);\r\n\r\n  const handleDelete = (usernameToDelete: string) => {\r\n    const updatedUsers = users.filter(user => user.username !== usernameToDelete);\r\n    setUsers(updatedUsers);\r\n    deleteUserFromLocalStorage(usernameToDelete); // Remove user from localStorage\r\n    alert(`Usuario ${usernameToDelete} eliminado con éxito`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"registro-usuarios-container\">\r\n      <button className=\"back-button\" id=\"back-button\" onClick={() => navigate('/administracion')}>\r\n        <FontAwesomeIcon icon={faArrowLeft} />\r\n      </button>\r\n      <div className=\"usuarios-registrados\">\r\n        <h2>Usuarios Registrados</h2>\r\n        {users.map((user, index) => (\r\n          <div key={index} className=\"usuario-item\">\r\n            <p><strong>Usuario:</strong> {user.username}</p>\r\n            <p><strong>Nombre:</strong> {user.nombre}</p>\r\n            <p><strong>Apellido:</strong> {user.apellido}</p>\r\n            <p><strong>Contraseña:</strong> {user.password}</p>\r\n            <p><strong>Cedula:</strong> {user.cedula}</p>\r\n            <p><strong>Fecha de Nacimiento:</strong> {user.fechaNacimiento}</p>\r\n            <p><strong>Correo:</strong> {user.correo}</p>\r\n            <button onClick={() => handleDelete(user.username)} className=\"delete-button\">\r\n              Eliminar\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MostrarUsuarios;\r\n","// ../../utils/auth.ts\r\nimport { User } from '../utils/users';\r\n\r\nconst USERS_KEY = 'users';\r\nconst LOGGED_IN_USER_KEY = 'loggedInUser';\r\n\r\nexport const saveUserToLocalStorage = (user: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  users.push(user);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\r\n};\r\n\r\nexport const getUsersFromLocalStorage = (): User[] => {\r\n  return JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n};\r\n\r\nexport const deleteUserFromLocalStorage = (username: string) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers = users.filter((user: User) => user.username !== username);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n};\r\n\r\nexport const authenticateUser = (username: string, password: string): boolean => {\r\n  const users = getUsersFromLocalStorage();\r\n  const user = users.find(u => u.username === username && u.password === password);\r\n  if (user) {\r\n    localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(user));\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getLoggedInUser = (): User | null => {\r\n  const user = localStorage.getItem(LOGGED_IN_USER_KEY);\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const updateUserInLocalStorage = (updatedUser: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers: User[] = users.map((user: User) =>\r\n    user.username === updatedUser.username ? updatedUser : user\r\n  );\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n\r\n  // También actualizar el usuario actualmente autenticado\r\n  localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(updatedUser));\r\n};\r\n"],"names":["MostrarUsuarios","navigate","useNavigate","users","setUsers","useState","useEffect","storedUsers","getUsersFromLocalStorage","_jsxs","className","children","_jsx","id","onClick","FontAwesomeIcon","icon","faArrowLeft","map","user","index","username","nombre","apellido","password","cedula","fechaNacimiento","correo","usernameToDelete","updatedUsers","filter","deleteUserFromLocalStorage","alert","concat","handleDelete","USERS_KEY","LOGGED_IN_USER_KEY","saveUserToLocalStorage","JSON","parse","localStorage","getItem","push","setItem","stringify","authenticateUser","find","u","getLoggedInUser","updateUserInLocalStorage","updatedUser"],"sourceRoot":""}