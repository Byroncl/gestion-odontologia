{"version":3,"file":"static/js/537.cc3dc5a0.chunk.js","mappings":"kMAaA,MAgHA,EAhHuCA,KACrC,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAwB,KACzDC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,CACrDG,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,QAAS,MAGXC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAqBC,aAAaC,QAAQ,gBAC5CF,GACFT,EAAgBY,KAAKC,MAAMJ,GAC7B,GACC,IAEH,MAAMK,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1Bf,EAAmB,IAAKD,EAAiB,CAACc,GAAOC,GAAQ,EA4B3D,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,UACrBF,EAAAA,EAAAA,MAAA,MAAII,UAAU,eAAcF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAG,IAAGJ,SAAC,wBACjBC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAG,kBAAiBJ,SAAC,sBAC/BC,EAAAA,EAAAA,KAAA,MAAAD,UAAIC,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAG,UAASJ,SAAC,mBAG3BF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kCAAiCF,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,QAAMI,UAAU,6BAA6BG,SAnC3BX,IACpBA,EAAEY,iBACF,MAAMC,EAA8B,CAClCC,IAAI,IAAIC,MAAOC,aACZ7B,GAEC8B,EAAsB,IAAIjC,EAAc6B,GAC9C5B,EAAgBgC,GAChBtB,aAAauB,QAAQ,eAAgBrB,KAAKsB,UAAUF,IACpDG,MAAM,gCACNhC,EAAmB,CACjBC,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,QAAS,IACT,EAoBoEc,SAAA,EAClEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLpB,KAAK,OACLqB,YAAY,QACZpB,MAAOf,EAAgBE,KACvBkC,SAAUxB,EACVyB,UAAQ,KAEVjB,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLpB,KAAK,OACLqB,YAAY,OACZpB,MAAOf,EAAgBG,KACvBiC,SAAUxB,EACVyB,UAAQ,KAEVjB,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLpB,KAAK,UACLqB,YAAY,WACZpB,MAAOf,EAAgBI,QACvBgC,SAAUxB,EACVyB,UAAQ,KAEVjB,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLpB,KAAK,UACLqB,YAAY,gBACZpB,MAAOf,EAAgBK,QACvB+B,SAAUxB,EACVyB,UAAQ,KAEVjB,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQf,SAAC,kBAExBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,mBAAkBF,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACHtB,EAAayC,KAAIC,IAChBtB,EAAAA,EAAAA,MAAA,OAA0BI,UAAU,mBAAkBF,SAAA,EACpDF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAAe,IAAEoB,EAAYrC,SACxCe,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAEoB,EAAYpC,SACvCc,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,IAAEoB,EAAYnC,YAC3Ca,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAAoB,IAAEoB,EAAYlC,YAC7Ce,EAAAA,EAAAA,KAAA,UAAQoB,QAASA,IA7DLb,KACpB,MAAMG,EAAsBjC,EAAa4C,QAAOF,GAAeA,EAAYZ,KAAOA,IAClF7B,EAAgBgC,GAChBtB,aAAauB,QAAQ,eAAgBrB,KAAKsB,UAAUF,IACpDG,MAAM,8BAA2B,EAyDFS,CAAaH,EAAYZ,IAAKN,UAAU,gBAAeF,SAAC,eALvEoB,EAAYZ,cAYzB,C","sources":["components/usuario/RegistroCitas.tsx"],"sourcesContent":["// src/components/AppointmentScheduler.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../../assets/css/RegistroCitas.css';\r\nimport '../../assets/css/barra.css';\r\nimport { Link } from 'react-router-dom';\r\ninterface Appointment {\r\n  id: number;\r\n  date: string;\r\n  time: string;\r\n  patient: string;\r\n  dentist: string;\r\n}\r\n\r\nconst AppointmentScheduler: React.FC = () => {\r\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\r\n  const [appointmentData, setAppointmentData] = useState({\r\n    date: '',\r\n    time: '',\r\n    patient: '',\r\n    dentist: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const storedAppointments = localStorage.getItem('appointments');\r\n    if (storedAppointments) {\r\n      setAppointments(JSON.parse(storedAppointments));\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setAppointmentData({ ...appointmentData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newAppointment: Appointment = {\r\n      id: new Date().getTime(),\r\n      ...appointmentData,\r\n    };\r\n    const updatedAppointments = [...appointments, newAppointment];\r\n    setAppointments(updatedAppointments);\r\n    localStorage.setItem('appointments', JSON.stringify(updatedAppointments));\r\n    alert('Cita programada con éxito');\r\n    setAppointmentData({\r\n      date: '',\r\n      time: '',\r\n      patient: '',\r\n      dentist: '',\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id: number) => {\r\n    const updatedAppointments = appointments.filter(appointment => appointment.id !== id);\r\n    setAppointments(updatedAppointments);\r\n    localStorage.setItem('appointments', JSON.stringify(updatedAppointments));\r\n    alert('Cita eliminada con éxito');\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <nav className=\"navbar\">\r\n      <ul className=\"navbar-links\">\r\n        <li><Link to=\"/\">Cerrar sesión</Link></li>\r\n        <li><Link to=\"/registro-citas\">Registro Citas</Link></li>\r\n        <li><Link to=\"/perfil\">Perfil</Link></li>\r\n      </ul>\r\n    </nav>\r\n    <div className=\"appointment-scheduler-container\">\r\n      <form className=\"appointment-scheduler-form\" onSubmit={handleSubmit}>\r\n        <h2>Programar Cita</h2>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          placeholder=\"Fecha\"\r\n          value={appointmentData.date}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          name=\"time\"\r\n          placeholder=\"Hora\"\r\n          value={appointmentData.time}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"patient\"\r\n          placeholder=\"Paciente\"\r\n          value={appointmentData.patient}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"dentist\"\r\n          placeholder=\"Odontólogo\"\r\n          value={appointmentData.dentist}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Programar</button>\r\n      </form>\r\n      <div className=\"appointment-list\">\r\n        <h2>Citas Programadas</h2>\r\n        {appointments.map(appointment => (\r\n          <div key={appointment.id} className=\"appointment-item\">\r\n            <p><strong>Fecha:</strong> {appointment.date}</p>\r\n            <p><strong>Hora:</strong> {appointment.time}</p>\r\n            <p><strong>Paciente:</strong> {appointment.patient}</p>\r\n            <p><strong>Odontólogo:</strong> {appointment.dentist}</p>\r\n            <button onClick={() => handleDelete(appointment.id)} className=\"delete-button\">\r\n              Eliminar\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default AppointmentScheduler;\r\n"],"names":["AppointmentScheduler","appointments","setAppointments","useState","appointmentData","setAppointmentData","date","time","patient","dentist","useEffect","storedAppointments","localStorage","getItem","JSON","parse","handleChange","e","name","value","target","_jsxs","_Fragment","children","_jsx","className","Link","to","onSubmit","preventDefault","newAppointment","id","Date","getTime","updatedAppointments","setItem","stringify","alert","type","placeholder","onChange","required","map","appointment","onClick","filter","handleDelete"],"sourceRoot":""}