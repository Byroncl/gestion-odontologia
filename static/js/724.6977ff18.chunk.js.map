{"version":3,"file":"static/js/724.6977ff18.chunk.js","mappings":"0OAWA,MAyDA,EAzDwBA,KACtB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,cAAcG,GAAG,cAAcC,QAASA,IAAMP,EAAS,KAAKI,UAC5DC,EAAAA,EAAAA,KAACG,EAAAA,EAAe,CAACC,KAAMC,EAAAA,SAEzCL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAaQ,SAjBdC,IACnBA,EAAEC,kBACEC,EAAAA,EAAAA,IAAiBrB,EAAUG,IAC7BG,EAAS,IACTgB,MAAM,+BACNf,EAAS,YAETD,EAAS,2BACX,EASuDK,SAAA,EAE/CC,EAAAA,EAAAA,KAAA,OAAKW,IAAKC,EAAMC,IAAI,aAAaf,UAAU,UAC7CE,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,SACEc,KAAK,OACLC,YAAY,oBACZC,MAAO5B,EACP6B,SAAWV,GAAMlB,EAAYkB,EAAEW,OAAOF,OACtCG,UAAQ,KAEVnB,EAAAA,EAAAA,KAAA,SACEc,KAAK,WACLC,YAAY,gBACZC,MAAOzB,EACP0B,SAAWV,GAAMf,EAAYe,EAAEW,OAAOF,OACtCG,UAAQ,IAET1B,IAASO,EAAAA,EAAAA,KAAA,KAAGF,UAAU,QAAOC,SAAEN,KAChCO,EAAAA,EAAAA,KAAA,UAAQc,KAAK,SAAQf,SAAC,uBACtBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBI,QAASA,IAAMP,EAAS,gBAAgBI,SAAC,0CAG7EC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBI,QAASA,IAAMP,EAAS,aAAaI,SAAC,0BAM5E,C,gFC7DV,MAAMqB,EAAY,QACZC,EAAqB,eAEdC,EAA0BC,IACrC,MAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQR,IAAc,MAC5DI,EAAMK,KAAKN,GACXI,aAAaG,QAAQV,EAAWK,KAAKM,UAAUP,GAAO,EAG3CQ,EAA2BA,IAC/BP,KAAKC,MAAMC,aAAaC,QAAQR,IAAc,MAG1Ca,EAA8B7C,IACzC,MACM8C,EADQT,KAAKC,MAAMC,aAAaC,QAAQR,IAAc,MACjCe,QAAQZ,GAAeA,EAAKnC,WAAaA,IACpEuC,aAAaG,QAAQV,EAAWK,KAAKM,UAAUG,GAAc,EAGlDzB,EAAmBA,CAACrB,EAAkBG,KACjD,MACMgC,EADQS,IACKI,MAAKC,GAAKA,EAAEjD,WAAaA,GAAYiD,EAAE9C,WAAaA,IACvE,QAAIgC,IACFI,aAAaG,QAAQT,EAAoBI,KAAKM,UAAUR,KACjD,EAEG,EAGDe,EAAkBA,KAC7B,MAAMf,EAAOI,aAAaC,QAAQP,GAClC,OAAOE,EAAOE,KAAKC,MAAMH,GAAQ,IAAI,EAG1BgB,EAA4BC,IACvC,MACMN,EADQT,KAAKC,MAAMC,aAAaC,QAAQR,IAAc,MACzBqB,KAAKlB,GACtCA,EAAKnC,WAAaoD,EAAYpD,SAAWoD,EAAcjB,IAEzDI,aAAaG,QAAQV,EAAWK,KAAKM,UAAUG,IAG/CP,aAAaG,QAAQT,EAAoBI,KAAKM,UAAUS,GAAa,C","sources":["components/login/Login.tsx","utils/auth.ts"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../../assets/css/Login.css';\r\nimport { authenticateUser } from '../../utils/auth';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nimport Logo from '../../assets/image/LOGO-ULEAM-HORIZONTAL.png';\r\n\r\nconst Login: React.FC = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (authenticateUser(username, password)) {\r\n      setError('');\r\n      alert('Inicio de sesión exitoso');\r\n      navigate('/perfil'); // Redirigir al perfil después del inicio de sesión\r\n    } else {\r\n      setError('Credenciales incorrectas');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='fondo'>\r\n      <button className=\"back-button\" id=\"back-button\" onClick={() => navigate('/')}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n            </button>\r\n      <div className=\"login-container\">\r\n        <form className=\"login-form\" onSubmit={handleLogin}>\r\n            \r\n            <img src={Logo} alt=\"Logo ULEAM\" className=\"Logo\" />\r\n          <h2>Inicio de Sesión</h2>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nombre de usuario\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          {error && <p className=\"error\">{error}</p>}\r\n          <button type=\"submit\">Iniciar Sesión</button>\r\n          <div className=\"login-options\">\r\n            <button className=\"register-button\" onClick={() => navigate('/login-admin')}>\r\n                Iniciar sesión como administrador\r\n            </button>\r\n            <button className=\"register-button\" onClick={() => navigate('/registro')}>\r\n                Registrarse\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// ../../utils/auth.ts\r\nimport { User } from '../utils/users';\r\n\r\nconst USERS_KEY = 'users';\r\nconst LOGGED_IN_USER_KEY = 'loggedInUser';\r\n\r\nexport const saveUserToLocalStorage = (user: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  users.push(user);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(users));\r\n};\r\n\r\nexport const getUsersFromLocalStorage = (): User[] => {\r\n  return JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n};\r\n\r\nexport const deleteUserFromLocalStorage = (username: string) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers = users.filter((user: User) => user.username !== username);\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n};\r\n\r\nexport const authenticateUser = (username: string, password: string): boolean => {\r\n  const users = getUsersFromLocalStorage();\r\n  const user = users.find(u => u.username === username && u.password === password);\r\n  if (user) {\r\n    localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(user));\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const getLoggedInUser = (): User | null => {\r\n  const user = localStorage.getItem(LOGGED_IN_USER_KEY);\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\nexport const updateUserInLocalStorage = (updatedUser: User) => {\r\n  const users = JSON.parse(localStorage.getItem(USERS_KEY) || '[]');\r\n  const updatedUsers: User[] = users.map((user: User) =>\r\n    user.username === updatedUser.username ? updatedUser : user\r\n  );\r\n  localStorage.setItem(USERS_KEY, JSON.stringify(updatedUsers));\r\n\r\n  // También actualizar el usuario actualmente autenticado\r\n  localStorage.setItem(LOGGED_IN_USER_KEY, JSON.stringify(updatedUser));\r\n};\r\n"],"names":["Login","username","setUsername","useState","password","setPassword","error","setError","navigate","useNavigate","_jsxs","className","children","_jsx","id","onClick","FontAwesomeIcon","icon","faArrowLeft","onSubmit","e","preventDefault","authenticateUser","alert","src","Logo","alt","type","placeholder","value","onChange","target","required","USERS_KEY","LOGGED_IN_USER_KEY","saveUserToLocalStorage","user","users","JSON","parse","localStorage","getItem","push","setItem","stringify","getUsersFromLocalStorage","deleteUserFromLocalStorage","updatedUsers","filter","find","u","getLoggedInUser","updateUserInLocalStorage","updatedUser","map"],"sourceRoot":""}