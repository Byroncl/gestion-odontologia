{"version":3,"file":"static/js/887.f96bdf1d.chunk.js","mappings":"4MAgBA,MAoIA,EApIkCA,KAChC,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAuB,CAC7DC,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,MAAO,GACPC,KAAM,GACNC,OAAQ,KAGJC,EAAgBC,IACpB,MAAM,KAAEH,EAAI,MAAEI,GAAUD,EAAEE,OAC1BX,EAAgB,IAAKD,EAAc,CAACO,GAAOI,GAAQ,EA6DrD,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,yBAAyBG,SA5DvBP,IACpBA,EAAEQ,iBAIF,IADkB,sBACHC,KAAKnB,EAAaG,MAE/B,YADAiB,MAAM,uCAKR,GAAIpB,EAAaI,UAAUiB,OAAS,GAAKrB,EAAaI,UAAUiB,OAAS,GAEvE,YADAD,MAAM,qEAKR,GAAIpB,EAAaK,UAAUgB,OAAS,GAAKrB,EAAaK,UAAUgB,OAAS,GAEvE,YADAD,MAAM,kEAKR,GAAIpB,EAAaM,MAAMe,OAAS,GAAKrB,EAAaM,MAAMe,OAAS,GAE/D,YADAD,MAAM,2EAMR,IADkB,6DACHD,KAAKnB,EAAaO,MAE/B,YADAa,MAAM,uFAKR,GAAmC,KAA/BpB,EAAaQ,OAAOa,OAEtB,YADAD,MAAM,sDAIR,MAAME,EAAqBC,aAAaC,QAAQ,gBAChD,IAAIC,EAA+B,GAC/BH,IACFG,EAAeC,KAAKC,MAAML,IAE5BC,aAAaK,QAAQ,eAAgBF,KAAKG,UAAU,IAAIJ,EAAczB,KACtEoB,MAAM,4CACNnB,EAAgB,CACdE,KAAM,GACNC,UAAW,GACXC,UAAW,GACXC,MAAO,GACPC,KAAM,GACNC,OAAQ,IACR,EAKgEO,SAAA,EAChEF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,cAAcgB,GAAG,cAAcC,QAASA,IAAMjC,EAAS,mBAAmBiB,UAC1EF,EAAAA,EAAAA,KAACmB,EAAAA,EAAe,CAACC,KAAMC,EAAAA,SAEvCrB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+BACJF,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACL5B,KAAK,OACL6B,YAAY,QACZzB,MAAOX,EAAaG,KACpBkC,SAAU5B,EACV6B,UAAQ,KAEVzB,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACL5B,KAAK,YACL6B,YAAY,iBACZzB,MAAOX,EAAaI,UACpBiC,SAAU5B,EACV6B,UAAQ,KAEVzB,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACL5B,KAAK,YACL6B,YAAY,cACZzB,MAAOX,EAAaK,UACpBgC,SAAU5B,EACV6B,UAAQ,KAEVzB,EAAAA,EAAAA,KAAA,YACEN,KAAK,QACL6B,YAAY,oBACZzB,MAAOX,EAAaM,MACpB+B,SAAU5B,EACV8B,KAAM,KAER1B,EAAAA,EAAAA,KAAA,SACEsB,KAAK,OACL5B,KAAK,OACL6B,YAAY,sBACZzB,MAAOX,EAAaO,KACpB8B,SAAU5B,EACV6B,UAAQ,KACVzB,EAAAA,EAAAA,KAAA,SACAsB,KAAK,OACL5B,KAAK,SACL6B,YAAY,yBACZzB,MAAOX,EAAaQ,OACpB6B,SAAU5B,EACV6B,UAAQ,KACRzB,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAAQpB,SAAC,sBAEpB,C","sources":["components/admin/AñadirHistorial.tsx"],"sourcesContent":["// src/components/AddClinicalData.tsx\r\nimport React, { useState } from 'react';\r\nimport '../../assets/css/AñadirHitorial.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ninterface ClinicalData {\r\n  date: string;\r\n  diagnosis: string;\r\n  treatment: string;\r\n  notes: string;\r\n  name: string;\r\n  cedula: string;\r\n}\r\n\r\nconst AddClinicalData: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [clinicalData, setClinicalData] = useState<ClinicalData>({\r\n    date: '',\r\n    diagnosis: '',\r\n    treatment: '',\r\n    notes: '',\r\n    name: '',\r\n    cedula: '',\r\n  });\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setClinicalData({ ...clinicalData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n  \r\n    // Validación de formato de fecha\r\n    const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n    if (!dateRegex.test(clinicalData.date)) {\r\n      alert('El formato de fecha no es válido');\r\n      return;\r\n    }\r\n  \r\n    // Validación de longitud de diagnosis\r\n    if (clinicalData.diagnosis.length < 5 || clinicalData.diagnosis.length > 20) {\r\n      alert('La longitud del diagnóstico debe estar entre 5 y 20 caracteres');\r\n      return;\r\n    }\r\n  \r\n    // Validación de longitud de treatment\r\n    if (clinicalData.treatment.length < 5 || clinicalData.treatment.length > 20) {\r\n      alert('La longitud del tratamiento debe estar entre 5 y 20 caracteres');\r\n      return;\r\n    }\r\n  \r\n    // Validación de longitud de notes\r\n    if (clinicalData.notes.length < 1 || clinicalData.notes.length > 20) {\r\n      alert('La longitud de las notas adicionales debe estar entre 1 y 20 caracteres');\r\n      return;\r\n    }\r\n  \r\n    // Validación de longitud de name\r\n    const nameRegex = /^[a-zA-ZáéíóúÁÉÍÓÚ\\s]{3,15}$/;\r\n    if (!nameRegex.test(clinicalData.name)) {\r\n      alert('El nombre del paciente debe tener entre 3 y 15 letras, letras con acento y espacios');\r\n      return;\r\n    }\r\n  \r\n    // Validación de longitud de cedula\r\n    if (clinicalData.cedula.length !== 10) {\r\n      alert('La cédula del paciente debe tener 10 caracteres');\r\n      return;\r\n    }\r\n  \r\n    const storedClinicalData = localStorage.getItem('clinicalData');\r\n    let existingData: ClinicalData[] = [];\r\n    if (storedClinicalData) {\r\n      existingData = JSON.parse(storedClinicalData);\r\n    }\r\n    localStorage.setItem('clinicalData', JSON.stringify([...existingData, clinicalData]));\r\n    alert('Datos clínicos agregados con éxito');\r\n    setClinicalData({\r\n      date: '',\r\n      diagnosis: '',\r\n      treatment: '',\r\n      notes: '',\r\n      name: '',\r\n      cedula: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-clinical-data-container\">\r\n      <form className=\"add-clinical-data-form\" onSubmit={handleSubmit}>\r\n      <button className=\"back-button\" id=\"back-button\" onClick={() => navigate('/administracion')}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} />\r\n          </button>\r\n        <h2>Agregar Datos Clínicos</h2>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          placeholder=\"Fecha\"\r\n          value={clinicalData.date}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"diagnosis\"\r\n          placeholder=\"Diagnóstico\"\r\n          value={clinicalData.diagnosis}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"treatment\"\r\n          placeholder=\"Tratamiento\"\r\n          value={clinicalData.treatment}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"notes\"\r\n          placeholder=\"Notas adicionales\"\r\n          value={clinicalData.notes}\r\n          onChange={handleChange}\r\n          rows={4}\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nombre del paciente\"\r\n          value={clinicalData.name}\r\n          onChange={handleChange}\r\n          required/>\r\n        <input \r\n        type=\"text\" \r\n        name=\"cedula\" \r\n        placeholder=\"Cédula del paciente\" \r\n        value={clinicalData.cedula} \r\n        onChange={handleChange} \r\n        required/>\r\n        <button type=\"submit\">Agregar Datos</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddClinicalData;\r\n"],"names":["AddClinicalData","navigate","useNavigate","clinicalData","setClinicalData","useState","date","diagnosis","treatment","notes","name","cedula","handleChange","e","value","target","_jsx","className","children","_jsxs","onSubmit","preventDefault","test","alert","length","storedClinicalData","localStorage","getItem","existingData","JSON","parse","setItem","stringify","id","onClick","FontAwesomeIcon","icon","faArrowLeft","type","placeholder","onChange","required","rows"],"sourceRoot":""}